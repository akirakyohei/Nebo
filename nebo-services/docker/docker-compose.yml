version: "2.1"
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zookeeper
  kafka-connect:
    image: debezium/connect:1.0
    hostname: kafka-connect
    container_name: kafka-connect
    ports:
      - "8083:8083"
    environment:
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: kafka-connect-configs
      OFFSET_STORAGE_TOPIC: kafka-connect-offsets
      STATUS_STORAGE_TOPIC: kafka-connect-statuses
      BOOTSTRAP_SERVERS: kafka:19092
    restart: on-failure
    depends_on:
      - zookeeper
      - kafka
      - mariadb
  mariadb:
    image: mariadb:lts-jammy
    container_name: mariadb
    ports:
      - "3306:3306"
    environment:
      MARIADB_ROOT_PASSWORD: "ajdhjewjhredbdbbd"
  schema-registry:
    image: confluentinc/cp-schema-registry:5.4.0
    ports:
      - "8081:8081"
    hostname: schema-registry
    container_name: schema-registry
    depends_on:
      - zookeeper
      - kafka
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: "zookeeper:2181"
    restart: on-failure
  rest-proxy:
    image: confluentinc/cp-kafka-rest:5.4.0
    ports:
      - "8082:8082"
    hostname: rest-proxy
    container_name: rest-proxy
    depends_on:
      - zookeeper
      - kafka
      - schema-registry
    environment:
      KAFKA_REST_HOST_NAME: rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:19092
      KAFKA_REST_LISTENERS: "http://rest-proxy:8082"
      KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schema-registry:8081"
    restart: on-failure
  # kafka-topics-ui:
  #   image: landoop/kafka-topics-ui:0.9.4
  #   ports:
  #     - "8001:8000"
  #   hostname: kafka-topics-ui
  #   container_name: kafka-topics-ui
  #   depends_on:
  #     - rest-proxy
  #   environment:
  #     KAFKA_REST_PROXY_URL: "http://rest-proxy:8082"
  #     PROXY: "true"
  #   restart: on-failure
  # kafka-connect-ui:
  #   image: landoop/kafka-connect-ui:0.9.4
  #   hostname: kafka-connect-ui
  #   ports:
  #     - "8002:8000"
  #   depends_on:
  #     - kafka-connect
  #   environment:
  #     CONNECT_URL: "http://kafka-connect:8083/"
  #     PROXY: "true"
  #   restart: on-failure
  debezium-ui:
    image: debezium/debezium-ui:latest
    container_name: debezium-ui
    hostname: debezium-ui
    depends_on:
      - kafka-connect
      # condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      KAFKA_CONNECT_URIS: "http://kafka-connect:8083/"
    restart: on-failure
  rabbitmq:
    image: rabbitmq:latest
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - "15672:15672"
    environment:
      - RABBITMQ_ERLANG_COOKIE=cluster_cookie
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
